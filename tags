!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
$NVIM_TUI_ENABLE_TRUE_COLOR	init.vim	/^  let $NVIM_TUI_ENABLE_TRUE_COLOR=1$/;"	v
(;<CR>	init.vim	/^inoremap (;<CR> (<CR><Tab><CR>0<C-D>);<UP>$/;"	m
-display-style	pack/nvim/start/nvim-lspconfig/Makefile	/^	selene --display-style=quiet .$/;"	m
2gD	init.vim	/^nnoremap 2gD :only<bar>vsplit<CR>gD$/;"	m
2gd	init.vim	/^nnoremap 2gd :only<bar>vsplit<CR>gd$/;"	m
<BS>	init.vim	/^     nmap <BS> <C-W>h$/;"	m
<C-k>	init.vim	/^imap <C-k> <Plug>(neosnippet_expand_or_jump)$/;"	m
<C-r>	init.vim	/^vnoremap <C-r> "0y<Esc>:%s\/<C-r>0\/\/g<left><left>$/;"	m
<CR>	init.vim	/^inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm() : "\\<CR>"$/;"	m
<Down>	init.vim	/^noremap <Down> <NOP>$/;"	m
<F2>	init.vim	/^nnoremap <F2> :NERDTreeToggle<cr>$/;"	m
<F3>	init.vim	/^nnoremap <F3> :TagbarToggle<cr>$/;"	m
<F4>	init.vim	/^nnoremap <silent> <F4> :FloatermSend<CR>$/;"	m
<Leader><Leader>	init.vim	/^nnoremap <silent> <Leader><Leader> :call SourceConfig()<cr>$/;"	m
<Leader>py	init.vim	/^nmap <Leader>py <Plug>(Prettier)$/;"	m
<Left>	init.vim	/^noremap <Left> <NOP>$/;"	m
<M-k>	init.vim	/^vnoremap <M-k> <Cmd>lua require("dapui").eval()<CR> " Alt+k$/;"	m
<Right>	init.vim	/^noremap <Right> <NOP>$/;"	m
<S-Left>	init.vim	/^nnoremap <S-Left> :bprevious<cr>$/;"	m
<S-Right>	init.vim	/^nnoremap <S-Right> :bnext<cr>$/;"	m
<Up>	init.vim	/^noremap <Up> <NOP>$/;"	m
<c-,>	init.vim	/^  inoremap <silent><expr> <c-,> coc#refresh()$/;"	m
<c-@>	init.vim	/^  inoremap <silent><expr> <c-@> coc#refresh()$/;"	m
<c-\>	init.vim	/^nnoremap <silent> <c-\\> :TmuxNavigatePrevious<cr>$/;"	m
<c-h>	init.vim	/^nnoremap <silent> <c-h> :TmuxNavigateLeft<cr>$/;"	m
<c-j>	init.vim	/^nnoremap <silent> <c-j> :TmuxNavigateDown<cr>$/;"	m
<c-k>	init.vim	/^nnoremap <silent> <c-k> :TmuxNavigateUp<cr>$/;"	m
<c-l>	init.vim	/^nnoremap <silent> <c-l> :TmuxNavigateRight<cr>$/;"	m
<c-p>	init.vim	/^nnoremap <c-p> :FZF<cr>$/;"	m
<leader><leader>w	init.vim	/^map  <leader><leader>w <Plug>(easymotion-bd-w)$/;"	m
<leader><leader>w	init.vim	/^nmap <leader><leader>w <Plug>(easymotion-overwin-w)$/;"	m
<leader>a	init.vim	/^nnoremap <leader>a :Ack!<space>$/;"	m
<leader>ba	init.vim	/^nnoremap <leader>ba :Telescope dap list_breakpoints<CR>$/;"	m
<leader>bb	init.vim	/^nnoremap <leader>bb :lua require'dap'.toggle_breakpoint()<CR>$/;"	m
<leader>bc	init.vim	/^nnoremap <leader>bc :lua require'dap'.set_breakpoint(vim.fn.input('Breakpoint condition: '))<CR>$/;"	m
<leader>bg	init.vim	/^map <leader>bg :let &background = (&background == "dark"? "light" : "dark")<cr>$/;"	m
<leader>bl	init.vim	/^nnoremap <leader>bl :lua require'dap'.set_breakpoint(nil, nil, vim.fn.input('Log point message: '))<CR>$/;"	m
<leader>br	init.vim	/^nnoremap <leader>br :lua require'dap'.clear_breakpoints()<CR>$/;"	m
<leader>c	init.vim	/^map <leader>c :nohlsearch<cr>$/;"	m
<leader>d	init.vim	/^nnoremap <leader>d :NERDTreeToggle<cr>$/;"	m
<leader>d?	init.vim	/^nnoremap <leader>d? :lua require('dap.ui.widgets').centered_float(require'dap.ui.widgets'.scopes)<CR>$/;"	m
<leader>dc	init.vim	/^nnoremap <leader>dc :lua require'dap'.continue()<CR>$/;"	m
<leader>dd	init.vim	/^nnoremap <leader>dd :lua require'dap'.disconnect()<CR>$/;"	m
<leader>df	init.vim	/^nnoremap <leader>df :Telescope dap frames<CR>$/;"	m
<leader>dh	init.vim	/^nnoremap <leader>dh :Telescope dap commands<CR>$/;"	m
<leader>di	init.vim	/^nnoremap <leader>di :lua require'dap.ui.widgets'.hover()<CR>$/;"	m
<leader>dj	init.vim	/^nnoremap <leader>dj :lua require'dap'.step_over()<CR>$/;"	m
<leader>dk	init.vim	/^nnoremap <leader>dk :lua require'dap'.step_into()<CR>$/;"	m
<leader>dl	init.vim	/^nnoremap <leader>dl :lua require'dap'.run_last()<CR>$/;"	m
<leader>do	init.vim	/^nnoremap <leader>do :lua require'dap'.step_out()<CR>$/;"	m
<leader>dr	init.vim	/^nnoremap <leader>dr :lua require'dap'.repl.toggle()<CR>$/;"	m
<leader>dt	init.vim	/^nnoremap <leader>dt :lua require'dap'.terminate()<CR>$/;"	m
<leader>f	init.vim	/^nnoremap <leader>f :NERDTreeFind<CR>$/;"	m
<leader>h	init.vim	/^nnoremap <leader>h :split<cr>$/;"	m
<leader>n	init.vim	/^nnoremap <leader>n :NERDTreeFocus<CR>$/;"	m
<leader>q	init.vim	/^nnoremap <leader>q :close<cr>$/;"	m
<leader>v	init.vim	/^nnoremap <leader>v :vsplit<cr>$/;"	m
<leader>vc	init.vim	/^nnoremap <leader>vc :lua require'jdtls'.test_class()<CR>$/;"	m
<leader>vm	init.vim	/^nnoremap <leader>vm :lua require'jdtls'.test_nearest_method()<CR>$/;"	m
<leader>w	init.vim	/^nnoremap <leader>w :Bclose<cr>$/;"	m
<space>	init.vim	/^nnoremap <space> zz$/;"	m
BookmarkMapKeys	init.vim	/^function! BookmarkMapKeys()$/;"	f
BookmarkUnmapKeys	init.vim	/^function! BookmarkUnmapKeys()$/;"	f
F.exists 	lua/init.lua	/^F.exists = function(dir, file_pattern)$/;"	f
If CBQN has been installed in a non-standard directory or can't be installed globally pass `libcbqnPath 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/bqnlsp.lua	/^If CBQN has been installed in a non-standard directory or can't be installed globally pass `libcbqnPath = '\/path\/to\/CBQN'` to the setup function.$/;"	f
JdtShowLogs	pack/plugins/start/nvim-jdtls/plugin/nvim_jdtls.vim	/^command! JdtShowLogs lua require('jdtls.setup').show_logs()$/;"	c
JdtWipeDataAndRestart	pack/plugins/start/nvim-jdtls/plugin/nvim_jdtls.vim	/^command! JdtWipeDataAndRestart lua require('jdtls.setup').wipe_data_and_restart()$/;"	c
K	init.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
M._ask_client_for_choice	pack/plugins/start/nvim-jdtls/lua/jdtls/tests.lua	/^function M._ask_client_for_choice(prompt, choices, pick_many)$/;"	f
M._complete_compile	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M._complete_compile()$/;"	f
M._complete_set_runtime	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M._complete_set_runtime()$/;"	f
M._parse_user_command_options	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M._parse_user_command_options(command_definition)$/;"	f
M._setup_buffer	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs.lua	/^  function M._setup_buffer(client_id, bufnr)$/;"	f
M.add_commands	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^function M.add_commands()$/;"	f
M.add_hook_after	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.add_hook_after(func, new_fn)$/;"	f
M.add_hook_before	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.add_hook_before(func, new_fn)$/;"	f
M.available_servers	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.available_servers()$/;"	f
M.bufname_valid	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.bufname_valid(bufname)$/;"	f
M.build_projects	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.build_projects(opts)$/;"	f
M.check	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^function M.check()$/;"	f
M.compile	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.compile(type)$/;"	f
M.create_module_commands	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.create_module_commands(module_name, commands)$/;"	f
M.execute_command	pack/plugins/start/nvim-jdtls/lua/jdtls/util.lua	/^function M.execute_command(command, callback, bufnr)$/;"	f
M.extract_constant	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.extract_constant(opts)$/;"	f
M.extract_method	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.extract_method(opts)$/;"	f
M.extract_variable	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.extract_variable(opts)$/;"	f
M.extract_variable_all	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.extract_variable_all(opts)$/;"	f
M.fetch_main_configs	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^function M.fetch_main_configs(opts, callback)$/;"	f
M.find_git_ancestor	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.find_git_ancestor(startpath)$/;"	f
M.find_mercurial_ancestor	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.find_mercurial_ancestor(startpath)$/;"	f
M.find_node_modules_ancestor	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.find_node_modules_ancestor(startpath)$/;"	f
M.find_package_json_ancestor	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.find_package_json_ancestor(startpath)$/;"	f
M.find_root	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^function M.find_root(markers, source)$/;"	f
M.generate	pack/plugins/start/nvim-jdtls/lua/jdtls/tests.lua	/^function M.generate(opts)$/;"	f
M.get_active_client_by_name	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.get_active_client_by_name(bufnr, servername)$/;"	f
M.get_active_clients_list_by_ft	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.get_active_clients_list_by_ft(filetype)$/;"	f
M.get_config_by_ft	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.get_config_by_ft(filetype)$/;"	f
M.get_current_class_name	lua/utils.lua	/^function M.get_current_class_name()$/;"	f
M.get_current_full_class_name	lua/utils.lua	/^function M.get_current_full_class_name()$/;"	f
M.get_current_full_method_name	lua/utils.lua	/^function M.get_current_full_method_name(delimiter)$/;"	f
M.get_current_method_name	lua/utils.lua	/^function M.get_current_method_name()$/;"	f
M.get_current_package_name	lua/utils.lua	/^function M.get_current_package_name()$/;"	f
M.get_lsp_clients	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.get_lsp_clients(filter)$/;"	f
M.get_managed_clients	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.get_managed_clients()$/;"	f
M.get_other_matching_providers	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.get_other_matching_providers(filetype)$/;"	f
M.goto_subjects	pack/plugins/start/nvim-jdtls/lua/jdtls/tests.lua	/^function M.goto_subjects(opts)$/;"	f
M.insert_package_json	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.insert_package_json(config_files, field, fname)$/;"	f
M.javap	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.javap()$/;"	f
M.join	pack/plugins/start/nvim-jdtls/lua/jdtls/path.lua	/^function M.join(...)$/;"	f
M.jol	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.jol(mode, classname)$/;"	f
M.jshell	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.jshell()$/;"	f
M.launch	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs.lua	/^    function M.launch(bufnr)$/;"	f
M.mk_test_results	pack/plugins/start/nvim-jdtls/lua/jdtls/junit.lua	/^function M.mk_test_results(bufnr)$/;"	f
M.mk_test_results	pack/plugins/start/nvim-jdtls/lua/jdtls/testng.lua	/^function M.mk_test_results(bufnr)$/;"	f
M.new	pack/nvim/start/nvim-lspconfig/lua/lspconfig/manager.lua	/^function M.new(config, make_config)$/;"	f
M.open_classfile	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.open_classfile(fname)$/;"	f
M.organize_imports	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.organize_imports()$/;"	f
M.path 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^M.path = (function()$/;"	f
M.pick_many	pack/plugins/start/nvim-jdtls/lua/jdtls/ui.lua	/^function M.pick_many(items, prompt, label_f, opts)$/;"	f
M.pick_one	pack/plugins/start/nvim-jdtls/lua/jdtls/ui.lua	/^function M.pick_one(items, prompt, label_fn)$/;"	f
M.pick_one_async	pack/plugins/start/nvim-jdtls/lua/jdtls/ui.lua	/^function M.pick_one_async(items, prompt, label_fn, cb)$/;"	f
M.pick_test	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^function M.pick_test(opts)$/;"	f
M.reenter	pack/nvim/start/nvim-lspconfig/lua/lspconfig/async.lua	/^function M.reenter()$/;"	f
M.resolve_classname	pack/plugins/start/nvim-jdtls/lua/jdtls/util.lua	/^function M.resolve_classname()$/;"	f
M.restart 	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^M.restart = function()$/;"	f
M.root_pattern	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.root_pattern(...)$/;"	f
M.run	pack/nvim/start/nvim-lspconfig/lua/lspconfig/async.lua	/^function M.run(func)$/;"	f
M.run_command	pack/nvim/start/nvim-lspconfig/lua/lspconfig/async.lua	/^function M.run_command(cmd)$/;"	f
M.search_ancestors	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.search_ancestors(startpath, func)$/;"	f
M.server_aliases 	pack/nvim/start/nvim-lspconfig/lua/lspconfig.lua	/^M.server_aliases = function(name)$/;"	f
M.set_runtime	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.set_runtime(runtime)$/;"	f
M.setup	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs.lua	/^  function M.setup(user_config)$/;"	f
M.setup_dap	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^function M.setup_dap(opts)$/;"	f
M.setup_dap_main_class_configs	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^function M.setup_dap_main_class_configs(opts)$/;"	f
M.show_logs	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^function M.show_logs()$/;"	f
M.start_or_attach	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.start_or_attach(config, opts, start_opts)$/;"	f
M.start_or_attach	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^function M.start_or_attach(config, opts, start_opts)$/;"	f
M.strip_archive_subpath	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.strip_archive_subpath(path)$/;"	f
M.super_implementation	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.super_implementation()$/;"	f
M.tbl_flatten	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.tbl_flatten(t)$/;"	f
M.test_class	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^function M.test_class(opts)$/;"	f
M.test_nearest_method	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^function M.test_nearest_method(opts)$/;"	f
M.update_project_config	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.update_project_config()$/;"	f
M.update_projects_config	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^function M.update_projects_config(opts)$/;"	f
M.validate_bufnr	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^function M.validate_bufnr(bufnr)$/;"	f
M.wipe_data_and_restart	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^function M.wipe_data_and_restart()$/;"	f
M.with_classpaths	pack/plugins/start/nvim-jdtls/lua/jdtls/util.lua	/^function M.with_classpaths(fn)$/;"	f
M.with_java_executable	pack/plugins/start/nvim-jdtls/lua/jdtls/util.lua	/^function M.with_java_executable(mainclass, project, fn, bufnr)$/;"	f
M:_attach_after_client_initialized	pack/nvim/start/nvim-lspconfig/lua/lspconfig/manager.lua	/^function M:_attach_after_client_initialized(bufnr, new_config, root_dir, client, single_file)$/;"	f
M:_attach_and_cache	pack/nvim/start/nvim-lspconfig/lua/lspconfig/manager.lua	/^function M:_attach_and_cache(bufnr, root, client_id)$/;"	f
M:_attach_or_spawn	pack/nvim/start/nvim-lspconfig/lua/lspconfig/manager.lua	/^function M:_attach_or_spawn(bufnr, new_config, root_dir, client, single_file)$/;"	f
M:_register_workspace_folders	pack/nvim/start/nvim-lspconfig/lua/lspconfig/manager.lua	/^function M:_register_workspace_folders(bufnr, root_dir, client)$/;"	f
M:_start_new_client	pack/nvim/start/nvim-lspconfig/lua/lspconfig/manager.lua	/^function M:_start_new_client(bufnr, new_config, root_dir, single_file)$/;"	f
M:add	pack/nvim/start/nvim-lspconfig/lua/lspconfig/manager.lua	/^function M:add(root_dir, single_file, bufnr)$/;"	f
M:clients	pack/nvim/start/nvim-lspconfig/lua/lspconfig/manager.lua	/^function M:clients()$/;"	f
M:try_add	pack/nvim/start/nvim-lspconfig/lua/lspconfig/manager.lua	/^function M:try_add(bufnr, project_root)$/;"	f
M:try_add_wrapper	pack/nvim/start/nvim-lspconfig/lua/lspconfig/manager.lua	/^function M:try_add_wrapper(bufnr, project_root)$/;"	f
N	init.vim	/^nnoremap N Nzzzv$/;"	m
NERDTreeIgnore	init.vim	/^let NERDTreeIgnore = [$/;"	v
NERDTreeShowHidden	init.vim	/^let NERDTreeShowHidden = 1$/;"	v
Q	init.vim	/^cnoreabbrev Q q$/;"	m
Q!	init.vim	/^cnoreabbrev Q! q!$/;"	m
Qall	init.vim	/^cnoreabbrev Qall qall$/;"	m
Qall!	init.vim	/^cnoreabbrev Qall! qall!$/;"	m
SourceConfig	init.vim	/^ function SourceConfig() abort$/;"	f
W	init.vim	/^cnoreabbrev W w$/;"	m
W!	init.vim	/^cnoreabbrev W! w!$/;"	m
WQ	init.vim	/^cnoreabbrev WQ wq$/;"	m
Wa	init.vim	/^cnoreabbrev Wa wa$/;"	m
Wq	init.vim	/^cnoreabbrev Wq wq$/;"	m
["java.show.references"] 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^  ["java.show.references"] = function(args)$/;"	f
['$/updateDocumentState'] 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/grammarly.lua	/^      ['$\/updateDocumentState'] = function()$/;"	f
['_java.test.advancedAskClientForChoice'] 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^  ['_java.test.advancedAskClientForChoice'] = function(args)$/;"	f
['_java.test.askClientForChoice'] 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^  ['_java.test.askClientForChoice'] = function(args)$/;"	f
['_java.test.askClientForInput'] 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^  ['_java.test.askClientForInput'] = function(args)$/;"	f
['eslint/confirmESLintExecution'] 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/eslint.lua	/^      ['eslint\/confirmESLintExecution'] = function(_, result)$/;"	f
['eslint/noLibrary'] 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/eslint.lua	/^      ['eslint\/noLibrary'] = function()$/;"	f
['eslint/openDoc'] 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/eslint.lua	/^      ['eslint\/openDoc'] = function(_, result)$/;"	f
['eslint/probeFailed'] 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/eslint.lua	/^      ['eslint\/probeFailed'] = function()$/;"	f
['function'] 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^  ['function'] = function(_)$/;"	f
['table'] 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^  ['table'] = function(config)$/;"	f
['window/showStatus'] 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/relay_lsp.lua	/^      ['window\/showStatus'] = function(_, result)$/;"	f
]f	init.vim	/^map <silent> ]f <C-U>\/}$<CR>$/;"	m
_activate_env	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/julials.lua	/^  local function _activate_env(environment)$/;"	f
`autocmd BufNewFile,BufRead *.mcfunction set filetype	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/spyglassmc_language_server.lua	/^`autocmd BufNewFile,BufRead *.mcfunction set filetype=mcfunction`$/;"	f
activate_env	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/julials.lua	/^local function activate_env(path)$/;"	f
add_commands	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^local function add_commands(client, bufnr, opts)$/;"	f
after 	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^    after = function()$/;"	f
async_root_dir_function 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^  async_root_dir_function = 'Asynchronous root_dir functions are not supported by `:checkhealth lspconfig`',$/;"	f
attach_to_active_buf	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^local function attach_to_active_buf(bufnr, client_name)$/;"	f
ayucolor	init.vim	/^let ayucolor = 'dark'$/;"	v
before 	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^    before = function(conf)$/;"	f
before_init 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/codeqlls.lua	/^    before_init = function(initialize_params)$/;"	f
before_init 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/rust_analyzer.lua	/^    before_init = function(init_params, config)$/;"	f
black	syntax/java.vim	/^let black = "#282c34"$/;"	v
blue	syntax/java.vim	/^let blue = "#61AFEF"$/;"	v
buf_build	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/texlab.lua	/^local function buf_build()$/;"	f
buf_cache	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/denols.lua	/^local function buf_cache(bufnr, client)$/;"	f
buf_cancel_build	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/texlab.lua	/^local function buf_cancel_build()$/;"	f
buf_change_env	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/texlab.lua	/^local function buf_change_env()$/;"	f
buf_find_envs	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/texlab.lua	/^local function buf_find_envs()$/;"	f
buf_search	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/texlab.lua	/^local function buf_search()$/;"	f
build_go_files	init.vim	/^function! s:build_go_files()$/;"	f
build_index	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/svlangserver.lua	/^local function build_index()$/;"	f
callback 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs.lua	/^              callback = function()$/;"	f
callback 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs.lua	/^            callback = function(arg)$/;"	f
callback 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs.lua	/^        callback = function(opt)$/;"	f
callback 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^    callback = function(args)$/;"	f
callback 	pack/plugins/start/nvim-jdtls/lua/jdtls/util.lua	/^      callback = function(err, resp)$/;"	f
cb	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^    local function cb(dir, _)$/;"	f
change_signature	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function change_signature(bufnr, command, code_action_params)$/;"	f
check_dir	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/volar.lua	/^  local function check_dir(path)$/;"	f
check_in_workspace	pack/nvim/start/nvim-lspconfig/lua/lspconfig/manager.lua	/^local function check_in_workspace(client, root_dir)$/;"	f
check_lspconfig	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^local function check_lspconfig(bufnr)$/;"	f
check_lspdocs	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^local function check_lspdocs(buf_clients, other_matching_configs)$/;"	f
cleanArtifacts	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/texlab.lua	/^local function cleanArtifacts()$/;"	f
cleanAuxiliary	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/texlab.lua	/^local function cleanAuxiliary()$/;"	f
client.workspace_did_change_configuration	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs.lua	/^        function client.workspace_did_change_configuration(settings)$/;"	f
coc_config_dict	setup-lombok-support-for-coc-java.py	/^        coc_config_dict = json.loads(coc_config_file_content)$/;"	v
coc_config_dict	setup-lombok-support-for-coc-java.py	/^    coc_config_dict = {}$/;"	v
coc_config_file_content	setup-lombok-support-for-coc-java.py	/^        coc_config_file_content = coc_settings_json_path.read_text()$/;"	v
coc_config_file_content	setup-lombok-support-for-coc-java.py	/^    coc_config_file_content = json.dumps(coc_config_dict, indent=4)$/;"	v
coc_java_dir_path	setup-lombok-support-for-coc-java.py	/^coc_java_dir_path = Path.home() \/ '.config\/coc\/extensions\/node_modules\/coc-java\/lombok'$/;"	v
coc_settings_json_bak_path	setup-lombok-support-for-coc-java.py	/^coc_settings_json_bak_path = nvim_config_dir_path \/ 'coc-settings.json.bak'$/;"	v
coc_settings_json_path	setup-lombok-support-for-coc-java.py	/^coc_settings_json_path = nvim_config_dir_path \/ 'coc-settings.json'$/;"	v
config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/delphi_ls.lua	/^config = function()$/;"	f
config.on_attach 	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^  config.on_attach = function(client, bufnr)$/;"	f
config_info.root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^      config_info.root_dir = error_messages.async_root_dir_function$/;"	f
configs.__newindex	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs.lua	/^function configs.__newindex(t, config_name, config_def)$/;"	f
configuration_handler	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^local function configuration_handler(err, result, ctx, config)$/;"	f
constructors 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^      constructors = ui.pick_many(status.constructors, 'Include super class constructor(s): ', function(x)$/;"	f
create_cmd	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^  local function create_cmd(name, command, cmdopts)$/;"	f
cyan	syntax/java.vim	/^let cyan = "#56B6C2"$/;"	v
dap.listeners.after.event_initialized["dapui_config"]	lua/init.lua	/^dap.listeners.after.event_initialized["dapui_config"]=function()$/;"	f
dap.listeners.before.event_exited["dapui_config"]	lua/init.lua	/^dap.listeners.before.event_exited["dapui_config"]=function()$/;"	f
dap.listeners.before.event_terminated["dapui_config"]	lua/init.lua	/^dap.listeners.before.event_terminated["dapui_config"]=function()$/;"	f
dap.listeners.before['event_hotcodereplace']['jdtls'] 	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^  dap.listeners.before['event_hotcodereplace']['jdtls'] = function(session, body)$/;"	f
dap.providers.configs["jdtls"] 	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^    dap.providers.configs["jdtls"] = function (bufnr)$/;"	f
denols_handler	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/denols.lua	/^local function denols_handler(err, result, ctx, config)$/;"	f
dependency_graph	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/texlab.lua	/^local function dependency_graph()$/;"	f
dirname	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function dirname(path)$/;"	f
download_lombok	setup-lombok-support-for-coc-java.py	/^def download_lombok():$/;"	f
ds_pinyin_lsp_off	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/ds_pinyin_lsp.lua	/^local function ds_pinyin_lsp_off(bufnr)$/;"	f
ds_pinyin_lsp_on	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/ds_pinyin_lsp.lua	/^local function ds_pinyin_lsp_on(bufnr)$/;"	f
elseif type(v) ~	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^              elseif type(v) ~= 'function' then$/;"	f
enrich_dap_config	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function enrich_dap_config(config_, on_config)$/;"	f
escape_markdown_punctuations	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^                        local function escape_markdown_punctuations(str)$/;"	f
escape_wildcards	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function escape_wildcards(path)$/;"	f
exists	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function exists(filename)$/;"	f
extract	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function extract(entity, opts)$/;"	f
extract_data_dir	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^local function extract_data_dir(bufnr)$/;"	f
fetch_candidates	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function fetch_candidates(context, on_candidates)$/;"	f
fetch_launch_args	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function fetch_launch_args(lens, context, on_launch_args)$/;"	f
fetch_needs_preview	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function fetch_needs_preview(mainclass, project, cb, bufnr)$/;"	f
fields 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^      fields = ui.pick_many(status.fields, 'Include field to initialize by constructor(s): ', function(x)$/;"	f
filetypes 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/spyglassmc_language_server.lua	/^    filetypes = { 'mcfunction' },$/;"	f
filter 	pack/nvim/start/nvim-lspconfig/plugin/lspconfig.lua	/^      filter = function(client)$/;"	f
find_child_by_type	lua/utils.lua	/^function find_child_by_type(expr, type_name)$/;"	f
find_hxml	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/haxe_language_server.lua	/^local function find_hxml(path)$/;"	f
find_last	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function find_last(str, pattern)$/;"	f
find_nearest 	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^  find_nearest = function(lenses)$/;"	f
find_node_by_type	lua/utils.lua	/^function find_node_by_type(expr, type_name)$/;"	f
find_vscode_ancestor	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/vdmj.lua	/^local function find_vscode_ancestor(startpath)$/;"	f
find_zk_root	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/zk.lua	/^local function find_zk_root(startpath)$/;"	f
fix_all	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/eslint.lua	/^local function fix_all(opts)$/;"	f
fix_zero_version	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/jdtls.lua	/^local function fix_zero_version(workspace_edit)$/;"	f
flatten	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/omnisharp.lua	/^      local function flatten(tbl)$/;"	f
fmt_doc	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^  local function fmt_doc(config)$/;"	f
fmtpath	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^local function fmtpath(p)$/;"	f
format_opts	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function format_opts()$/;"	f
g:NERDTreeChDirMode	init.vim	/^let g:NERDTreeChDirMode = 2$/;"	v
g:airline#extensions#tabline#enabled	init.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#show_tabs	init.vim	/^let g:airline#extensions#tabline#show_tabs = 0$/;"	v
g:airline_left_alt_sep	init.vim	/^let g:airline_left_alt_sep = ''$/;"	v
g:airline_left_sep	init.vim	/^let g:airline_left_sep = '»'$/;"	v
g:airline_left_sep	init.vim	/^let g:airline_left_sep = '▶'$/;"	v
g:airline_left_sep	init.vim	/^let g:airline_left_sep = ''$/;"	v
g:airline_powerline_fonts	init.vim	/^let g:airline_powerline_fonts = 0$/;"	v
g:airline_right_alt_sep	init.vim	/^let g:airline_right_alt_sep = ''$/;"	v
g:airline_right_sep	init.vim	/^let g:airline_right_sep = '«'$/;"	v
g:airline_right_sep	init.vim	/^let g:airline_right_sep = '◀'$/;"	v
g:airline_right_sep	init.vim	/^let g:airline_right_sep = ''$/;"	v
g:airline_symbols	init.vim	/^    let g:airline_symbols = {}$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.branch = '⎇'$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.branch = ''$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.crypt = '🔒'$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.linenr = '¶'$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.linenr = '␊'$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.linenr = '␤'$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.linenr = ''$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.maxlinenr = ''$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.maxlinenr = '☰'$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.notexists = '∄'$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.paste = 'Þ'$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.paste = 'ρ'$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.paste = '∥'$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.readonly = ''$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.spell = 'Ꞩ'$/;"	v
g:airline_symbols	init.vim	/^let g:airline_symbols.whitespace = 'Ξ'$/;"	v
g:ale_linters	init.vim	/^let g:ale_linters = {$/;"	v
g:bookmark_auto_save	init.vim	/^let g:bookmark_auto_save = 1$/;"	v
g:bookmark_no_default_key_mappings	init.vim	/^let g:bookmark_no_default_key_mappings = 1$/;"	v
g:bookmark_save_per_working_dir	init.vim	/^let g:bookmark_save_per_working_dir = 1$/;"	v
g:calendar_date_endian	init.vim	/^let g:calendar_date_endian = "big"            " Format: year \/ month \/ day$/;"	v
g:calendar_date_separator	init.vim	/^let g:calendar_date_separator = "-"           " Format: year - month - day$/;"	v
g:calendar_first_day	init.vim	/^let g:calendar_first_day = "monday"           " Weeks starts with Monday$/;"	v
g:calendar_google_calendar	init.vim	/^let g:calendar_google_calendar = 1$/;"	v
g:calendar_google_task	init.vim	/^let g:calendar_google_task = 1$/;"	v
g:calendar_view	init.vim	/^let g:calendar_view = "days"                  " Set days as the default view$/;"	v
g:calendar_week_number	init.vim	/^let g:calendar_week_number = 1                " Show week numbers$/;"	v
g:ctrlp_map	init.vim	/^let g:ctrlp_map = ''$/;"	v
g:delve_backend	init.vim	/^let g:delve_backend = "native"$/;"	v
g:deoplete#sources#go#pointer	init.vim	/^let g:deoplete#sources#go#pointer = 1$/;"	v
g:deoplete#sources#go#unimported_packages	init.vim	/^let g:deoplete#sources#go#unimported_packages = 0$/;"	v
g:floaterm_keymap_new	init.vim	/^let g:floaterm_keymap_new    = '<F7>'$/;"	v
g:floaterm_keymap_next	init.vim	/^let g:floaterm_keymap_next   = '<F4>'$/;"	v
g:floaterm_keymap_prev	init.vim	/^let g:floaterm_keymap_prev   = '<F3>'$/;"	v
g:floaterm_keymap_toggle	init.vim	/^let g:floaterm_keymap_toggle = '<F12>'$/;"	v
g:go_addtags_transform	init.vim	/^let g:go_addtags_transform = "snakecase"$/;"	v
g:go_auto_sameids	init.vim	/^let g:go_auto_sameids = 1$/;"	v
g:go_auto_type_info	init.vim	/^let g:go_auto_type_info = 1$/;"	v
g:go_echo_command_info	init.vim	/^let g:go_echo_command_info = 1$/;"	v
g:go_fmt_autosave	init.vim	/^let g:go_fmt_autosave = 1$/;"	v
g:go_fmt_command	init.vim	/^let g:go_fmt_command = "goimports"$/;"	v
g:go_gocode_propose_source	init.vim	/^let g:go_gocode_propose_source=1$/;"	v
g:go_highlight_build_constraints	init.vim	/^let g:go_highlight_build_constraints = 1$/;"	v
g:go_highlight_extra_types	init.vim	/^let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_fields	init.vim	/^let g:go_highlight_fields = 1$/;"	v
g:go_highlight_function_calls	init.vim	/^let g:go_highlight_function_calls = 1$/;"	v
g:go_highlight_functions	init.vim	/^let g:go_highlight_functions = 1$/;"	v
g:go_highlight_methods	init.vim	/^let g:go_highlight_methods = 1$/;"	v
g:go_highlight_operators	init.vim	/^let g:go_highlight_operators = 1$/;"	v
g:go_highlight_structs	init.vim	/^let g:go_highlight_structs = 1$/;"	v
g:go_highlight_types	init.vim	/^let g:go_highlight_types = 1$/;"	v
g:go_list_type	init.vim	/^let g:go_list_type = "quickfix"$/;"	v
g:go_metalinter_command	init.vim	/^let g:go_metalinter_command = ""$/;"	v
g:go_metalinter_deadline	init.vim	/^let g:go_metalinter_deadline = "5s"$/;"	v
g:go_metalinter_enabled	init.vim	/^let g:go_metalinter_enabled = [$/;"	v
g:go_snippet_engine	init.vim	/^let g:go_snippet_engine = "neosnippet"$/;"	v
g:go_test_show_name	init.vim	/^let g:go_test_show_name = 1$/;"	v
g:material_theme_style	init.vim	/^let g:material_theme_style = 'dark'$/;"	v
g:multi_cursor_next_key	init.vim	/^let g:multi_cursor_next_key='<C-n>'$/;"	v
g:multi_cursor_skip_key	init.vim	/^let g:multi_cursor_skip_key='<C-b>'$/;"	v
g:neoformat_cpp_clangformat	init.vim	/^let g:neoformat_cpp_clangformat = {$/;"	v
g:neoformat_enabled_c	init.vim	/^let g:neoformat_enabled_c = ['clangformat']$/;"	v
g:neoformat_enabled_cpp	init.vim	/^let g:neoformat_enabled_cpp = ['clangformat']$/;"	v
g:neoformat_enabled_rust	init.vim	/^let g:neoformat_enabled_rust = ['rustfmt']$/;"	v
g:neomake_error_sign	init.vim	/^let g:neomake_error_sign   = {'text': '✖', 'texthl': 'NeomakeErrorSign'}$/;"	v
g:neomake_go_enabled_makers	init.vim	/^let g:neomake_go_enabled_makers = [ 'go', 'gometalinter' ]$/;"	v
g:neomake_go_gometalinter_maker	init.vim	/^let g:neomake_go_gometalinter_maker = {$/;"	v
g:neomake_info_sign	init.vim	/^let g:neomake_info_sign    = {'text': 'ℹ', 'texthl': 'NeomakeInfoSign'}$/;"	v
g:neomake_message_sign	init.vim	/^let g:neomake_message_sign = {'text': '➤', 'texthl': 'NeomakeMessageSign'}$/;"	v
g:neomake_warning_sign	init.vim	/^let g:neomake_warning_sign = {'text': '∆', 'texthl': 'NeomakeWarningSign'}$/;"	v
g:neosnippet#disable_runtime_snippets	init.vim	/^let g:neosnippet#disable_runtime_snippets = {$/;"	v
g:neosnippet#snippets_directory	init.vim	/^let g:neosnippet#snippets_directory='~\/.config\/nvim\/snippets'$/;"	v
g:nvim_jdtls	pack/plugins/start/nvim-jdtls/plugin/nvim_jdtls.vim	/^let g:nvim_jdtls = 1$/;"	v
g:one_allow_italics	init.vim	/^let g:one_allow_italics = 1$/;"	v
g:prettier#autoformat	init.vim	/^let g:prettier#autoformat = 1$/;"	v
g:prettier#autoformat_require_pragma	init.vim	/^let g:prettier#autoformat_require_pragma = 0$/;"	v
g:prettier#partial_format	init.vim	/^let g:prettier#partial_format=1$/;"	v
g:prettier#quickfix_auto_focus	init.vim	/^let g:prettier#quickfix_auto_focus = 0$/;"	v
g:prettier#quickfix_enabled	init.vim	/^let g:prettier#quickfix_enabled = 0$/;"	v
g:python3_host_prog	init.vim	/^    let g:python3_host_prog = '\/usr\/bin\/python3'$/;"	v
g:python_host_prog	init.vim	/^    let g:python_host_prog = '\/usr\/bin\/python2'$/;"	v
g:tagbar_ctags_bin	init.vim	/^let g:tagbar_ctags_bin = '\/usr\/bin\/ctags'$/;"	v
g:tagbar_type_go	init.vim	/^let g:tagbar_type_go = {$/;"	v
g:tern#arguments	init.vim	/^let g:tern#arguments = [" — persistent"]$/;"	v
g:tern#command	init.vim	/^let g:tern#command = ["tern"]$/;"	v
g:tern_request_timeout	init.vim	/^let g:tern_request_timeout = 1$/;"	v
g:tern_request_timeout	init.vim	/^let g:tern_request_timeout = 6000$/;"	v
g:tmux_navigator_no_mappings	init.vim	/^let g:tmux_navigator_no_mappings = 1$/;"	v
g:tmux_navigator_save_on_switch	init.vim	/^let g:tmux_navigator_save_on_switch = 1$/;"	v
g:vim_markdown_folding_disabled	init.vim	/^let g:vim_markdown_folding_disabled = 1$/;"	v
g:vim_markdown_toc_autofit	init.vim	/^let g:vim_markdown_toc_autofit = 1$/;"	v
g:vimwiki_list	init.vim	/^let g:vimwiki_list = [{$/;"	v
generate_readme	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^local function generate_readme(template_file, params)$/;"	f
get_cache_dir	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/jdtls.lua	/^local function get_cache_dir()$/;"	f
get_client	pack/nvim/start/nvim-lspconfig/lua/lspconfig/manager.lua	/^local function get_client(clients, root_dir, client_name)$/;"	f
get_cmd	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/drools_lsp.lua	/^local function get_cmd(config)$/;"	f
get_default_mavenrepo	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/vdmj.lua	/^local function get_default_mavenrepo()$/;"	f
get_first_class_lens	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function get_first_class_lens(lenses)$/;"	f
get_jar	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/drools_lsp.lua	/^local function get_jar(config)$/;"	f
get_jar_path	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/vdmj.lua	/^local function get_jar_path(config, package, version)$/;"	f
get_java_bin	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/drools_lsp.lua	/^local function get_java_bin(config)$/;"	f
get_java_opts	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/drools_lsp.lua	/^local function get_java_opts(config)$/;"	f
get_jdtls_cache_dir	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/jdtls.lua	/^local function get_jdtls_cache_dir()$/;"	f
get_jdtls_config_dir	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/jdtls.lua	/^local function get_jdtls_config_dir()$/;"	f
get_jdtls_jvm_args	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/jdtls.lua	/^local function get_jdtls_jvm_args()$/;"	f
get_jdtls_workspace_dir	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/jdtls.lua	/^local function get_jdtls_workspace_dir()$/;"	f
get_language_id	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/ltex.lua	/^local function get_language_id(_, filetype)$/;"	f
get_language_id 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/sourcekit.lua	/^    get_language_id = function(_, ftype)$/;"	f
get_latest_installed_version	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/vdmj.lua	/^local function get_latest_installed_version(repo)$/;"	f
get_method_lens_above_cursor	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function get_method_lens_above_cursor(lenses_tree, lnum)$/;"	f
get_probe_dir	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/angularls.lua	/^local function get_probe_dir(root_dir)$/;"	f
get_test_line_nr	pack/plugins/start/nvim-jdtls/lua/jdtls/testng.lua	/^  local function get_test_line_nr(lenses, name)$/;"	f
get_test_start_line_num	pack/plugins/start/nvim-jdtls/lua/jdtls/junit.lua	/^  local function get_test_start_line_num(lenses, test)$/;"	f
get_typescript_server_path	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/astro.lua	/^local function get_typescript_server_path(root_dir)$/;"	f
get_typescript_server_path	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/mdx_analyzer.lua	/^local function get_typescript_server_path(root_dir)$/;"	f
get_typescript_server_path	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/volar.lua	/^local function get_typescript_server_path(root_dir)$/;"	f
green	syntax/java.vim	/^let green = "#98c379"$/;"	v
handle_refactor_workspace_edit	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function handle_refactor_workspace_edit(err, result, ctx)$/;"	f
handler	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^  local function handler(err, result)$/;"	f
handler 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^      handler = function(err, result, ctx)$/;"	f
identifiers 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^        identifiers = vim.tbl_map(function(project) return { uri = project } end, selection)$/;"	f
identifiers 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^        identifiers = vim.tbl_map(function(project) return { uri = project } end, selection),$/;"	f
if type(def) ~	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^    if type(def) ~= 'function' then$/;"	f
if type(get_root_dir) 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs.lua	/^        if type(get_root_dir) == 'function' then$/;"	f
if type(get_root_dir) 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/manager.lua	/^    if type(get_root_dir) == 'function' then$/;"	f
if type(name) 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^    if type(name) == "function" then$/;"	f
if type(opts) 	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^  if type(opts) == 'function' then$/;"	f
if type(v) 	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^    if type(v) == 'function' then$/;"	f
indent	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^local function indent(n, s)$/;"	f
index_of	pack/plugins/start/nvim-jdtls/lua/jdtls/ui.lua	/^local function index_of(xs, term)$/;"	f
is_absolute	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function is_absolute(filename)$/;"	f
is_descendant	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function is_descendant(root, path)$/;"	f
is_dir	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function is_dir(filename)$/;"	f
is_file	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function is_file(filename)$/;"	f
is_fs_root	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function is_fs_root(path)$/;"	f
is_library	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/rust_analyzer.lua	/^local function is_library(fname)$/;"	f
is_selected 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^        is_selected = function(item)$/;"	f
is_selected 	pack/plugins/start/nvim-jdtls/lua/jdtls/tests.lua	/^      is_selected = function(x) return x.picked end$/;"	f
it	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^    local function it(_, v)$/;"	f
iterate_parents	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function iterate_parents(path)$/;"	f
j	init.vim	/^imap <expr> j pumvisible() ? "\\<C-n>" : 'j'$/;"	m
java_action_organize_imports	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function java_action_organize_imports(_, ctx)$/;"	f
java_action_rename	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function java_action_rename(command, ctx)$/;"	f
java_apply_refactoring_command	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function java_apply_refactoring_command(command, outer_ctx, after_refactor)$/;"	f
java_apply_workspace_edit	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function java_apply_workspace_edit(command)$/;"	f
java_choose_imports	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function java_choose_imports(resp)$/;"	f
java_generate_constructors_prompt	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function java_generate_constructors_prompt(_, outer_ctx)$/;"	f
java_generate_delegate_methods_prompt	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function java_generate_delegate_methods_prompt(_, outer_ctx)$/;"	f
java_generate_to_string_prompt	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function java_generate_to_string_prompt(_, outer_ctx)$/;"	f
java_hash_code_equals_prompt	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function java_hash_code_equals_prompt(_, outer_ctx)$/;"	f
java_override_methods	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function java_override_methods(_, context)$/;"	f
jsonnet_path	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/jsonnet_ls.lua	/^local function jsonnet_path(root_dir)$/;"	f
k	init.vim	/^imap <expr> k pumvisible() ? "\\<C-p>" : 'k'$/;"	m
label	pack/plugins/start/nvim-jdtls/lua/jdtls/tests.lua	/^      local function label(x)$/;"	f
label_f 	pack/plugins/start/nvim-jdtls/lua/jdtls/ui.lua	/^  label_f = label_f or function(item)$/;"	f
library_path	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/bqnlsp.lua	/^local function library_path(path, cmd_env)$/;"	f
local after_refactor 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^  local after_refactor = function()$/;"	f
local apply_refactor 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^  local apply_refactor = function(err, result, ctx)$/;"	f
local buffer_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^  local buffer_dir = api.nvim_buf_call(bufnr, function()$/;"	f
local clients 	pack/nvim/start/nvim-lspconfig/plugin/lspconfig.lua	/^  local clients = vim.tbl_map(function(client)$/;"	f
local co 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^    local co = coroutine.create(function()$/;"	f
local completion_sort 	pack/nvim/start/nvim-lspconfig/plugin/lspconfig.lua	/^local completion_sort = function(items)$/;"	f
local contains 	lua/init.lua	/^local contains = function(tbl, str)$/;"	f
local fields 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^    local fields = ui.pick_many(result.fields, 'Include item in equals\/hashCode?', function(x)$/;"	f
local fields 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^    local fields = ui.pick_many(result.fields, 'Include item in toString?', function(x)$/;"	f
local filter 	pack/nvim/start/nvim-lspconfig/plugin/lspconfig.lua	/^  local filter = function()$/;"	f
local fmt 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^    local fmt = function(method)$/;"	f
local get_clients_from_cmd_args 	pack/nvim/start/nvim-lspconfig/plugin/lspconfig.lua	/^local get_clients_from_cmd_args = function(arg)$/;"	f
local get_language_id 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/ocamllsp.lua	/^local get_language_id = function(_, ftype)$/;"	f
local getparent 	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^  local getparent = function(p)$/;"	f
local handle_buffer 	pack/plugins/start/nvim-jdtls/lua/jdtls/junit.lua	/^  local handle_buffer = function(buf)$/;"	f
local handle_buffer 	pack/plugins/start/nvim-jdtls/lua/jdtls/testng.lua	/^  local handle_buffer = function(buf)$/;"	f
local handler 	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^  local handler = function(err, result)$/;"	f
local has_fls_project_cfg 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/fennel_ls.lua	/^      local has_fls_project_cfg = function(path)$/;"	f
local help 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^    local help = vim.tbl_map(function(helptag)$/;"	f
local is_selected 	pack/plugins/start/nvim-jdtls/lua/jdtls/ui.lua	/^  local is_selected = opts.is_selected or function(_)$/;"	f
local jdtls 	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^  local jdtls = vim.tbl_filter(function(client)$/;"	f
local label 	pack/plugins/start/nvim-jdtls/lua/jdtls/tests.lua	/^  local label = function(x)$/;"	f
local lsp_complete_configured_servers 	pack/nvim/start/nvim-lspconfig/plugin/lspconfig.lua	/^local lsp_complete_configured_servers = function(arg)$/;"	f
local lsp_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/delphi_ls.lua	/^      local lsp_config = vim.fs.find(function(name)$/;"	f
local lsp_get_active_client_ids 	pack/nvim/start/nvim-lspconfig/plugin/lspconfig.lua	/^local lsp_get_active_client_ids = function(arg)$/;"	f
local make_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs.lua	/^    local make_config = function(root_dir)$/;"	f
local match 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^      local match = M.search_ancestors(startpath, function(path)$/;"	f
local meson_matcher 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/vala_ls.lua	/^local meson_matcher = function(path)$/;"	f
local methods 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^    local methods = ui.pick_many(field.delegateMethods, 'Generate delegate for method:', function(x)$/;"	f
local on_attach 	ftplugin/java.lua	/^local on_attach = function(client, bufnr)$/;"	f
local on_ready 	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^  local on_ready = opts.on_ready or function() end$/;"	f
local on_result 	pack/plugins/start/nvim-jdtls/lua/jdtls/tests.lua	/^  local on_result = function(err, result)$/;"	f
local paths 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/zk.lua	/^          local paths = vim.tbl_map(function(item)$/;"	f
local redefine_classes 	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^    local redefine_classes = function()$/;"	f
local repeat_test 	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^    local repeat_test = function()$/;"	f
local request 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local request = function(bufnr, method, params, handler)$/;"	f
local status, err 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^      local status, err = pcall(function()$/;"	f
local status_callback 	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^local status_callback = function(_, result)$/;"	f
local subdirs 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/vdmj.lua	/^  local subdirs = function(file)$/;"	f
local token_in_auth_file 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/sourcery.lua	/^local token_in_auth_file = function()$/;"	f
local version 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^  local version = type(config.cmd) == 'function' and '? (cmd is a function)' or try_fmt_version(config.cmd[1])$/;"	f
lombok_download_path	setup-lombok-support-for-coc-java.py	/^lombok_download_path = coc_java_dir_path \/ 'lombok-1.18.34.jar'$/;"	v
lombok_url	setup-lombok-support-for-coc-java.py	/^lombok_url = 'https:\/\/projectlombok.org\/downloads\/lombok.jar'$/;"	v
lspconfig.util.on_setup 	pack/nvim/start/nvim-lspconfig/test/lspconfig_spec.lua	/^      lspconfig.util.on_setup = function(config)$/;"	f
make_client_info	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^local function make_client_info(client, fname)$/;"	f
make_cmd	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/powershell_es.lua	/^local function make_cmd(new_config)$/;"	f
make_code_action_params	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function make_code_action_params(from_selection)$/;"	f
make_config	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function make_config(lens, launch_args, config_overrides)$/;"	f
make_config_info	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^local function make_config_info(config, bufnr)$/;"	f
make_context	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function make_context(bufnr)$/;"	f
make_implemented_servers_list	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^local function make_implemented_servers_list()$/;"	f
make_info	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^local function make_info(config_or_client)$/;"	f
make_lsp_sections	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^local function make_lsp_sections()$/;"	f
make_parts	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^local function make_parts(fns)$/;"	f
make_request_args	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function make_request_args(lens, uri)$/;"	f
make_section	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^local function make_section(indentlvl, sep, parts)$/;"	f
map_list	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^local function map_list(t, func)$/;"	f
map_sorted	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^local function map_sorted(t, func)$/;"	f
mapleader	init.vim	/^let mapleader = ';'$/;"	v
may_jdtls_buf	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^local function may_jdtls_buf(bufnr)$/;"	f
maybe_implicit_save	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^local function maybe_implicit_save()$/;"	f
maybe_repeat	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function maybe_repeat(lens, config, context, opts, items)$/;"	f
merge_unique	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function merge_unique(xs, ys)$/;"	f
mk_buf_loop	pack/plugins/start/nvim-jdtls/lua/jdtls/junit.lua	/^local function mk_buf_loop(sock, handle_buffer)$/;"	f
mk_buf_loop	pack/plugins/start/nvim-jdtls/lua/jdtls/testng.lua	/^local function mk_buf_loop(sock, handle_buffer)$/;"	f
mk_reader 	pack/plugins/start/nvim-jdtls/lua/jdtls/junit.lua	/^    mk_reader = function(sock)$/;"	f
mk_reader 	pack/plugins/start/nvim-jdtls/lua/jdtls/testng.lua	/^    mk_reader = function(sock)$/;"	f
move_file	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function move_file(command, code_action_params)$/;"	f
move_instance_method	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function move_instance_method(command, code_action_params)$/;"	f
move_static_member	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function move_static_member(command, code_action_params)$/;"	f
move_type	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function move_type(command, code_action_params)$/;"	f
mt:__index	pack/nvim/start/nvim-lspconfig/lua/lspconfig.lua	/^function mt:__index(k)$/;"	f
n	init.vim	/^nnoremap n nzzzv$/;"	m
new_config.on_attach 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs.lua	/^      new_config.on_attach = function(client, bufnr)$/;"	f
new_config.on_exit 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/manager.lua	/^  new_config.on_exit = util.add_hook_before(new_config.on_exit, function()$/;"	f
new_config.on_init 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs.lua	/^      new_config.on_init = util.add_hook_after(new_config.on_init, function(client, result)$/;"	f
nnoremap	ftplugin/java.lua	/^function nnoremap(rhs, lhs, bufopts, desc)$/;"	f
nnoremap('<space>f', function() vim.lsp.buf.format { async 	ftplugin/java.lua	/^  nnoremap('<space>f', function() vim.lsp.buf.format { async = true } end, bufopts, "Format file")$/;"	f
nvim_config_dir_path	setup-lombok-support-for-coc-java.py	/^nvim_config_dir_path = Path.home() \/ '.config\/nvim\/'$/;"	v
on_attach 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/delphi_ls.lua	/^    on_attach = function(client)$/;"	f
on_attach 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/eslint.lua	/^  on_attach = function(client, bufnr)$/;"	f
on_build_result	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function on_build_result(err, result, ctx)$/;"	f
on_data	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^  local function on_data(_, data, _)$/;"	f
on_exit 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/async.lua	/^    on_exit = function(_, code, _)$/;"	f
on_exit 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/relay_lsp.lua	/^          on_exit = function()$/;"	f
on_init 	ftplugin/java.lua	/^  on_init = function(client)$/;"	f
on_init 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/lua_ls.lua	/^  on_init = function(client)$/;"	f
on_language_status	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/jdtls.lua	/^local function on_language_status(_, result)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/angularls.lua	/^  on_new_config = function(new_config, new_root_dir)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/angularls.lua	/^  on_new_config = function(new_config,new_root_dir)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/apex_ls.lua	/^    on_new_config = function(config)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/astro.lua	/^    on_new_config = function(new_config, new_root_dir)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/bqnlsp.lua	/^    on_new_config = function(new_config, _)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/cadence.lua	/^    on_new_config = function(new_config, new_root_dir)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/codeqlls.lua	/^  on_new_config = function(config)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/drools_lsp.lua	/^    on_new_config = function(new_config)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/eslint.lua	/^    on_new_config = function(config, new_root_dir)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/glint.lua	/^    on_new_config = function(config, new_root_dir)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/haxe_language_server.lua	/^    on_new_config = function(new_config, new_root_dir)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/jsonnet_ls.lua	/^    on_new_config = function(new_config, root_dir)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/leanls.lua	/^    on_new_config = function(config, root_dir)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/mdx_analyzer.lua	/^    on_new_config = function(new_config, new_root_dir)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/omnisharp.lua	/^    on_new_config = function(new_config, _)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/openedge_ls.lua	/^    on_new_config = function(config)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/powershell_es.lua	/^    on_new_config = function(new_config, _)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/relay_lsp.lua	/^    on_new_config = function(config, root_dir)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/sourcery.lua	/^  on_new_config = function(new_config, _)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/tailwindcss.lua	/^    on_new_config = function(new_config)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/vdmj.lua	/^  on_new_config = function(config, root_dir)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/volar.lua	/^    on_new_config = function(new_config, new_root_dir)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/volar.lua	/^  on_new_config = function(new_config, new_root_dir)$/;"	f
on_new_config 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/zls.lua	/^    on_new_config = function(new_config, new_root_dir)$/;"	f
on_response	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^    local function on_response(err, resp)$/;"	f
on_response 	pack/plugins/start/nvim-jdtls/lua/jdtls/util.lua	/^    on_response = function(err, java_exec)$/;"	f
on_response 	pack/plugins/start/nvim-jdtls/lua/jdtls/util.lua	/^    on_response = function(err, settings)$/;"	f
on_result	pack/plugins/start/nvim-jdtls/lua/jdtls/tests.lua	/^  local function on_result(err, result)$/;"	f
on_stderr 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/async.lua	/^    on_stderr = function(_, data, _)$/;"	f
on_stdout 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/async.lua	/^    on_stdout = function(_, data, _)$/;"	f
on_textdocument_codeaction	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/jdtls.lua	/^local function on_textdocument_codeaction(err, actions, ctx)$/;"	f
on_textdocument_rename	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/jdtls.lua	/^local function on_textdocument_rename(err, workspace_edit, ctx)$/;"	f
on_workspace_applyedit	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/jdtls.lua	/^local function on_workspace_applyedit(err, workspace_edit, ctx)$/;"	f
orange	syntax/java.vim	/^let orange = "#d19a66" "special color for numbers$/;"	v
organize_imports	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/basedpyright.lua	/^local function organize_imports()$/;"	f
organize_imports	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/pyright.lua	/^local function organize_imports()$/;"	f
parse	pack/plugins/start/nvim-jdtls/lua/jdtls/junit.lua	/^local function parse(content, tests)$/;"	f
parse	pack/plugins/start/nvim-jdtls/lua/jdtls/testng.lua	/^local function parse(content, tests)$/;"	f
parse_test_case	pack/plugins/start/nvim-jdtls/lua/jdtls/junit.lua	/^local function parse_test_case(line)$/;"	f
path_join	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function path_join(...)$/;"	f
pick_projects	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function pick_projects(mode)$/;"	f
populate_candidates	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function populate_candidates(list, lenses)$/;"	f
program 	lua/init.lua	/^    program = function()$/;"	f
purple	syntax/java.vim	/^let purple = "#C678DD"$/;"	v
qf	init.vim	/^augroup qf$/;"	a
readfile	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^local function readfile(path)$/;"	f
red	syntax/java.vim	/^let red = "#E06C75"$/;"	v
reload_workspace	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/rust_analyzer.lua	/^local function reload_workspace(bufnr)$/;"	f
remove_newlines	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^local function remove_newlines(cmd)$/;"	f
report_hierarchy	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/svlangserver.lua	/^local function report_hierarchy()$/;"	f
request 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/eslint.lua	/^    request = function(bufnr, method, params)$/;"	f
require_all_configs	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^local function require_all_configs()$/;"	f
return { setup 	pack/nvim/start/nvim-lspconfig/lua/lspconfig.lua	/^      return { setup = function() end }$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/aiken.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/anakin_language_server.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/autotools_ls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/basedpyright.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/buck2.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/bufls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/c3_lsp.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/cadence.lua	/^    root_dir = function(fname, _)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/ccls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/clangd.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/cmake.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/coq_lsp.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/csharp_ls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/dafny.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/dagger.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/elixirls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/elmls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/erg_language_server.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/eslint.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/fennel_ls.lua	/^    root_dir = function(dir)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/foam_ls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/fortls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/ghdl_ls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/gleam.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/golangci_lint_ls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/gopls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/groovyls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/guile_ls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/htmx.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/intelephense.lua	/^    root_dir = function(pattern)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/jdtls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/jsonnet_ls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/julials.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/lean3ls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/leanls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/lexical.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/lua_ls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/markdown_oxide.lua	/^    root_dir = function(fname, _)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/marksman.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/mint.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/mlir_pdll_lsp_server.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/move_analyzer.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/neocmake.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/nextls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/nginx_language_server.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/nim_langserver.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/nimls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/nixd.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/omnisharp.lua	/^    root_dir = util.root_pattern('*.sln', '*.csproj', 'omnisharp.json', 'function.json'),$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/phan.lua	/^    root_dir = function(pattern)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/phpactor.lua	/^    root_dir = function(pattern)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/pylsp.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/pylyzer.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/pyright.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/qmlls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/r_language_server.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/regal.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/regols.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/rnix.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/robotframework_ls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/rome.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/rust_analyzer.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/scry.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/smarty_ls.lua	/^    root_dir = function(pattern)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/sourcekit.lua	/^    root_dir = function(filename, _)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/sourcery.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/svlangserver.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/tailwindcss.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/tblgen_lsp_server.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/templ.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/turtle_ls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/typst_lsp.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/uiua.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/unocss.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/vala_ls.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/vdmj.lua	/^    root_dir = function(fname)$/;"	f
root_dir 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/vscoqtop.lua	/^    root_dir = function(fname)$/;"	f
run	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function run(lens, config, context, opts)$/;"	f
run_opts.after	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^      function run_opts.after()$/;"	f
run_opts.before	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^      function run_opts.before(conf)$/;"	f
sanitize	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function sanitize(path)$/;"	f
sanitize_cmd	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs.lua	/^local function sanitize_cmd(cmd)$/;"	f
search_symbols	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^local function search_symbols(project, enclosing_type_name, on_selection)$/;"	f
set_python_path	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/basedpyright.lua	/^local function set_python_path(path)$/;"	f
set_python_path	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/pyright.lua	/^local function set_python_path(path)$/;"	f
show 	pack/plugins/start/nvim-jdtls/lua/jdtls/junit.lua	/^    show = function(lens)$/;"	f
show 	pack/plugins/start/nvim-jdtls/lua/jdtls/testng.lua	/^    show = function(lens)$/;"	f
show_documentation	init.vim	/^function! s:show_documentation()$/;"	f
start_debug_adapter	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function start_debug_adapter(callback, config)$/;"	f
switch_source_header	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/clangd.lua	/^local function switch_source_header(bufnr)$/;"	f
symbol_info	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/clangd.lua	/^local function symbol_info()$/;"	f
template	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^local function template(s, params)$/;"	f
testng_runner	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^local function testng_runner()$/;"	f
texlab_client.request('workspace/executeCommand', { command 	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/texlab.lua	/^  texlab_client.request('workspace\/executeCommand', { command = 'texlab.showDependencyGraph' }, function(err, result)$/;"	f
tick	pack/nvim/start/nvim-lspconfig/scripts/docgen.lua	/^                        local function tick(s)$/;"	f
traverse_parents	pack/nvim/start/nvim-lspconfig/lua/lspconfig/util.lua	/^  local function traverse_parents(path, cb)$/;"	f
trim_blankspace	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^local function trim_blankspace(cmd)$/;"	f
try_attach	pack/plugins/start/nvim-jdtls/lua/jdtls/setup.lua	/^  local function try_attach(buf)$/;"	f
try_fmt_version	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^local function try_fmt_version(prog)$/;"	f
try_get_cmd_output	pack/nvim/start/nvim-lspconfig/lua/lspconfig/health.lua	/^local function try_get_cmd_output(cmd)$/;"	f
util.execute_command({command 	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^          util.execute_command({command = 'vscode.java.resolveClasspath', arguments = { mainclass, project }}, function(err1, paths)$/;"	f
util.execute_command({command 	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^  util.execute_command({command = 'vscode.java.resolveMainClass'}, function(err, mainclasses)$/;"	f
util.execute_command({command 	pack/plugins/start/nvim-jdtls/lua/jdtls/dap.lua	/^  util.execute_command({command = 'vscode.java.startDebugSession'}, function(err0, port)$/;"	f
util.on_setup 	pack/nvim/start/nvim-lspconfig/test/lspconfig_spec.lua	/^      util.on_setup = function(_, conf)$/;"	f
version_string	pack/nvim/start/nvim-lspconfig/lua/lspconfig.lua	/^local function version_string(version)$/;"	f
vim.lsp.handlers['workspace/executeClientCommand'] 	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^  vim.lsp.handlers['workspace\/executeClientCommand'] = function(_, params, ctx)  -- luacheck: ignore 122$/;"	f
vim.wait(timeout_ms, function() return content ~	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^  vim.wait(timeout_ms, function() return content ~= nil end)$/;"	f
virtual_text_document	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/denols.lua	/^local function virtual_text_document(uri, client)$/;"	f
virtual_text_document_handler	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/denols.lua	/^local function virtual_text_document_handler(uri, res, client)$/;"	f
wQ	init.vim	/^cnoreabbrev wQ wq$/;"	m
white	syntax/java.vim	/^let white = "#ABB2BF"$/;"	v
win_float.default_opts	pack/nvim/start/nvim-lspconfig/lua/lspconfig/ui/windows.lua	/^function win_float.default_opts()$/;"	f
win_float.percentage_range_window	pack/nvim/start/nvim-lspconfig/lua/lspconfig/ui/windows.lua	/^function win_float.percentage_range_window() end$/;"	f
with_precision	pack/nvim/start/nvim-lspconfig/lua/lspconfig/configs/vdmj.lua	/^local function with_precision(version, is_high_precision)$/;"	f
x) return string.format	pack/plugins/start/nvim-jdtls/lua/jdtls.lua	/^      function(x) return string.format('%s: %s', x.field.name, x.field.type) end$/;"	f
yellow	syntax/java.vim	/^let yellow = "#E5C07B"$/;"	v
